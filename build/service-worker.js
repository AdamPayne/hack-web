"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","7dd7acd1cf68854a56c2f49991939add"],["/static/css/main.191799dc.css","3be637839fcccd51a2a665c046ccc048"],["/static/js/main.0edfbb2d.js","d27d1cb7378ef56d76d8e43ab7a2e86a"],["/static/media/coresnetworks.2a8285fd.png","2a8285fd701f4dc1b7da09b0317f5f00"],["/static/media/documaster.d2a5101f.png","d2a5101fe18e016c534332480ea6af48"],["/static/media/droxic.cf7c0423.png","cf7c0423d01fb1e1cf7c11f308253664"],["/static/media/glyphicons-halflings-regular.448c34a5.woff2","448c34a56d699c29117adc64c43affeb"],["/static/media/glyphicons-halflings-regular.e18bbf61.ttf","e18bbf611f2a2e43afc071aa2f4e1512"],["/static/media/glyphicons-halflings-regular.f4769f9b.eot","f4769f9bdb7466be65088239c12046d1"],["/static/media/glyphicons-halflings-regular.f7214668.svg","f721466883998665b87923b92dea655b"],["/static/media/glyphicons-halflings-regular.fa277232.woff","fa2772327f55d8198301fdb8bcfc8158"],["/static/media/icon_dropdown.8e3783bb.svg","8e3783bbcefaadd13cdbf0e47db40ecc"],["/static/media/icon_error.2cd452fd.svg","2cd452fdcefa66494fafa47f1236d475"],["/static/media/icon_expand.7fe25bcf.svg","7fe25bcfac7dd73bfa6304ff119e6aa9"],["/static/media/icon_facebook.284ccc1d.svg","284ccc1d3c9e4bffea42e47bdaec2bdb"],["/static/media/icon_instagram.cc20ffa3.svg","cc20ffa3590b84f9209a5cb93fb7cb5f"],["/static/media/icon_play.f482d120.svg","f482d120e1b45433a9a5f112aebada5c"],["/static/media/icon_success.3cd3b485.svg","3cd3b48599bf2678dfadd94eee397667"],["/static/media/icon_youtube.19eeee8d.svg","19eeee8dd5d6e36516f966d206f41677"],["/static/media/scalefocus.588f5151.png","588f51514a80c87d3f35ee3c5e251545"],["/static/media/siteground.47b3d726.png","47b3d7263efebcff898e29a97530dc7c"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var c="/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(c,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});